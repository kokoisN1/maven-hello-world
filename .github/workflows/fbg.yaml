name: doit-using-github-actions
on: [push]
jobs:
  build-deploy-execute:
    runs-on: ubuntu-20.04
   
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14'
      - uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '8'
      - name: "Extract version from pom.xml"
        run: |
            cd my-app
            export MAJOR=$(cat pom.xml | grep "^  <version>.*</version>$" | awk -F'[><]' '{print $3}' |  awk -F '[.-]+' '{print $1}')
            export MINOR=$(cat pom.xml | grep "^  <version>.*</version>$" | awk -F'[><]' '{print $3}' |  awk -F '[.-]+' '{print $2}')
            export PATCH=$(cat pom.xml | grep "^  <version>.*</version>$" | awk -F'[><]' '{print $3}' |  awk -F '[.-]+' '{print $3}')
            export PATCH=$((PATCH+1))
            export POMVERSION=$MAJOR.$MINOR.$PATCH
            echo "POMVERSION=$POMVERSION">savever.txt
      - run: |
            cd my-app
            source savever.txt
            mvn versions:set -DnewVersion=$POMVERSION
            mvn compile
            mvn package
            ls -al target
            java -cp target/my-app-$POMVERSION.jar com.mycompany.app.App
      - uses: actions/upload-artifact@v2
        with:
            name: my-app-artifact
            path: my-app/target/my-app-*.jar
  Create_and_push_docker_continer:
    runs-on: ubuntu-20.04
    needs: build-deploy-execute
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: my-app-artifact
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }
      - name: "Extract version from pom.xml- Yes, Again M$"
        run: |
            cd my-app
            export MAJOR=$(cat pom.xml | grep "^  <version>.*</version>$" | awk -F'[><]' '{print $3}' |  awk -F '[.-]+' '{print $1}')
            export MINOR=$(cat pom.xml | grep "^  <version>.*</version>$" | awk -F'[><]' '{print $3}' |  awk -F '[.-]+' '{print $2}')
            export PATCH=$(cat pom.xml | grep "^  <version>.*</version>$" | awk -F'[><]' '{print $3}' |  awk -F '[.-]+' '{print $3}')
            export PATCH=$((PATCH+1))
            export POMVERSION=$MAJOR.$MINOR.$PATCH
            echo "POMVERSION=$POMVERSION">savever.txt- name: Display structure of downloaded files
            cd ..
            docker build --tag my-app:$POMVERSION --build-arg ver=$POMVERSION .

    
